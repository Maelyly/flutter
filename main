import 'package:flutter/material.dart';
import 'Pessoa.dart';
import 'dart:convert';
import 'API.dart';




void main() => runApp(MyApp());
var novos = new Pessoa();
var listanovos = new List<Pessoa>();
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Login',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: HomePage()
    );
  }
}
class HomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(title:Text("Login")),
      body: Column(children: <Widget>[Divider(height: 3,),Text("Seja bem-vindo(a)",style: TextStyle(color: Colors.orangeAccent,fontSize: 20),textAlign: TextAlign.center,),
      Divider(height: 20,),Text("Clique em login para entrar ou em cadastrar para criar um perfil",style: TextStyle(color: Colors.orangeAccent,fontSize: 20),textAlign: TextAlign.center,),
     // Divider(height: 300,),RaisedButton(shape: new RoundedRectangleBorder(borderRadius: 
//new BorderRadius.circular(30.0)),child: Text("Listar",style: TextStyle(fontSize: 20)),onPressed: (){Navigator.push(context, MaterialPageRoute(builder: (context) => Pag2()));}, textColor: Colors.blue,color:Colors.white),
      Divider(height: 100,),RaisedButton(shape: new RoundedRectangleBorder(borderRadius: 
new BorderRadius.circular(60.0)),child: Text("Cadastrar",style: TextStyle(fontSize: 30),textAlign: TextAlign.center,),onPressed: (){Navigator.push(context, MaterialPageRoute(builder: (context) => Login()));}, textColor: Colors.white,color:Colors.orangeAccent),
Divider(height: 30,),RaisedButton(shape: new RoundedRectangleBorder(borderRadius: 
new BorderRadius.circular(60.0)),child: Text("Login",style: TextStyle(fontSize: 30),textAlign: TextAlign.center,),onPressed: (){Navigator.push(context, MaterialPageRoute(builder: (context) =>WidgetLogin()));}, textColor: Colors.white,color:Colors.orangeAccent),
      ])
    );
  }
}

class Pag2 extends StatefulWidget {
  @override
  _Pag2State createState() => _Pag2State();
}

class _Pag2State extends State<Pag2> {
  var users = new List<Pessoa>();

  _getUsers() {
    API.getUsers().then((response) {
      setState(() {
        Iterable list = json.decode(response.body);
        users = list.map((model) => Pessoa.fromJson(model)).toList();
        pre();
      });
    });
  }

  initState() {
    super.initState();
    _getUsers();
  }

  dispose() {
    super.dispose();
  }
  pre(){
    if(listanovos!=null){ 
      users.addAll(listanovos);   
    }
  }
  String alo="fim";
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(title: Text("Pessoas cadastradas"),backgroundColor: Colors.orangeAccent,),
      floatingActionButton: FloatingActionButton(child: Icon(Icons.check), onPressed: (){Navigator.push(context, MaterialPageRoute(builder: (context) => HomePage()));}),
      body: ListView.builder(
          itemCount: users.length,
          itemBuilder: (context, index) {
            if(users[index].nome!=null){
               alo = users[index].nome;
            }
            return ListTile(title: Text(alo,style: TextStyle(color: Colors.blue,fontSize: 30),textAlign: TextAlign.center,));
          },
        )
      
    );
  }
  
}
class WidgetLogin extends StatefulWidget {
  @override
  _WidgetLoginState createState() => _WidgetLoginState();
}

class _WidgetLoginState extends State<WidgetLogin> {
  
  GlobalKey<FormState> formkey = GlobalKey<FormState>();  
  TextStyle style = TextStyle(fontFamily: "Montserrat", fontSize: 20.0);
  String _login, _senha;

  @override
  Widget build(BuildContext context) {

    return Scaffold(
      backgroundColor: Colors.white,

    body: Center(
      child: Container(
        height: 500.0,
          child: Center(
            child: Form(
              key: formkey,
              child: Column(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: <Widget>[

                  SizedBox(height: 170.0, child: Image.asset("imagens/login", fit: BoxFit.scaleDown)),
                  
                  SizedBox(width: 300.0, child: buildTextLogin()),

                  SizedBox(width: 300.0, child: buildTextSenha()),

                  SizedBox(width: 200.0, child: buildButtonEntrar()),
                  
                ]
              )
              
            ),
          )
        ),
    )
      
    );  
  }

  buildTextLogin() {
    return TextFormField(
      decoration: InputDecoration(
        contentPadding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
        labelText: "Login",
                 
        enabledBorder: OutlineInputBorder(
          borderRadius: BorderRadius.circular(32.0), 
          borderSide: BorderSide(color: Colors.blueAccent),
        ),
        focusedBorder: OutlineInputBorder(
          borderRadius: BorderRadius.circular(32.0), 
          borderSide: BorderSide(color: Colors.blueAccent),
        ),
        border: OutlineInputBorder(
          borderRadius: BorderRadius.circular(32.0), 
          borderSide: BorderSide(color: Colors.blueAccent)),
      ),

      style: TextStyle(fontSize: 20.0, color: Colors.black, decorationColor: Colors.purple),
      //controller: loginController,
                
      validator: (value){
        if(value.isEmpty){
          return "Informe o Login";
        }
          return null;
      },

      onSaved: (inputLogin) => _login = inputLogin,
              
    );
  }  

  buildTextSenha() {
    return TextFormField(
      obscureText: true,
      decoration: InputDecoration(
        contentPadding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
        labelText: "Senha",
                 
        enabledBorder: OutlineInputBorder(
          borderRadius: BorderRadius.circular(32.0), 
          borderSide: BorderSide(color: Colors.orangeAccent),
        ),
        focusedBorder: OutlineInputBorder(
          borderRadius: BorderRadius.circular(32.0), 
          borderSide: BorderSide(color: Colors.orangeAccent),
        ),
        border: OutlineInputBorder(
          borderRadius: BorderRadius.circular(32.0), 
          borderSide: BorderSide(color: Colors.orangeAccent)),
      ),

      style: TextStyle(fontSize: 20.0, color: Colors.black, decorationColor: Colors.purple),
      //controller: senhaController,
                
      validator: (value){
        if(value.isEmpty){
          return "Informe a sua senha";
        }
          return null;
      },

      onSaved: (inputSenha) => _senha = inputSenha,
              
    );
  }

  buildButtonEntrar(){
    return ButtonTheme(
      minWidth: MediaQuery.of(context).size.width,
      padding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
      
      child: RaisedButton(
        
        color: Colors.orangeAccent,
        child: Text("Entrar",
          textAlign: TextAlign.center,
          style: style.copyWith(
            color: Colors.white,
            fontWeight: FontWeight.bold
          ),
        ),
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(30.0)
        ),
        
        onPressed: () {
          if(formkey.currentState.validate()){
            formkey.currentState.save();
            debugPrint(" Login: ${_login} \n Senha: ${_senha} \n");
            FocusScope.of(context).requestFocus(new FocusNode());
             var existe = Pessoa.construtor(_login,_senha);
          for(Pessoa f in listanovos){
            if(f.equals(f, existe)){
              debugPrint("Login feito com sucesso");
              Navigator.push(context, MaterialPageRoute(builder: (context) => Pagina3()));
            }
            else{
              debugPrint("Login inexistente, cadastre antes");
              Navigator.push(context, MaterialPageRoute(builder: (context) => HomePage()));
            }
          }
         
           
        }
         
          
        },

      ),
    );
    

  }
}

class Login extends StatefulWidget {
  @override
  _LoginState createState() => _LoginState();
  
}
class _LoginState extends State<Login> {
   GlobalKey<FormState> formkey2 = GlobalKey<FormState>();  
  final TextEditingController _emailFilter = new TextEditingController();
  final TextEditingController _passwordFilter = new TextEditingController();
  String _email = "";
  String _password = "";
  @override
  _LoginPageState() {
    _emailFilter.addListener(_emailListen);
    _passwordFilter.addListener(_passwordListen);
  }

   _emailListen() {
    if (_emailFilter.text.isEmpty) {
       return Text("Informe a senha");
    } else {
      _email = _emailFilter.text;
    }
  }

   _passwordListen() {
    if (_passwordFilter.text.isEmpty) {
       return Text("Informe o email");
    } else {
      _password = _passwordFilter.text;
    }
  }
 initState() {
    super.initState();
    _LoginPageState();
  }

  dispose() {
    super.dispose();
  }
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: Center(
      child: Container(
        height: 500.0,
        child: Center(
           child: Form(
              key: formkey2,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
                TextFormField(
                  decoration: InputDecoration(
                    contentPadding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                    labelText: "Login",
                            
                    enabledBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(32.0), 
                      borderSide: BorderSide(color: Colors.orangeAccent),
                    ),
                    focusedBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(32.0), 
                      borderSide: BorderSide(color: Colors.orangeAccent),
                    ),
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(32.0), 
                      borderSide: BorderSide(color: Colors.orangeAccent)),
                  ),

                  style: TextStyle(fontSize: 20.0, color: Colors.black, decorationColor: Colors.blueAccent),
                
                            
                  validator: (value){
                    if(value.isEmpty){
                      return "Informe o Login";
                    }
                      return null;
                  },
                  controller: _emailFilter,
                   
                  
              ),
              Divider(height: 30,),
                  TextFormField(
          obscureText: true,
          decoration: InputDecoration(
            contentPadding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
            labelText: "Nome",
                    
            enabledBorder: OutlineInputBorder(
              borderRadius: BorderRadius.circular(32.0), 
              borderSide: BorderSide(color: Colors.orangeAccent),
            ),
            focusedBorder: OutlineInputBorder(
              borderRadius: BorderRadius.circular(32.0), 
              borderSide: BorderSide(color: Colors.orangeAccent),
            ),
            border: OutlineInputBorder(
              borderRadius: BorderRadius.circular(32.0), 
              borderSide: BorderSide(color: Colors.orangeAccent)),
          ),

            style: TextStyle(fontSize: 20.0, color: Colors.black, decorationColor: Colors.blueAccent),

                      
            validator: (value){
              if(value.isEmpty){
                return "Informe seu nome";
              }
                return null;
            },  
              ),
                  Divider(height: 30,),
                  TextFormField(
          obscureText: true,
          decoration: InputDecoration(
            contentPadding: EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
            labelText: "Senha",
                    
            enabledBorder: OutlineInputBorder(
              borderRadius: BorderRadius.circular(32.0), 
              borderSide: BorderSide(color: Colors.orangeAccent),
            ),
            focusedBorder: OutlineInputBorder(
              borderRadius: BorderRadius.circular(32.0), 
              borderSide: BorderSide(color: Colors.orangeAccent),
            ),
            border: OutlineInputBorder(
              borderRadius: BorderRadius.circular(32.0), 
              borderSide: BorderSide(color: Colors.orangeAccent)),
          ),

            style: TextStyle(fontSize: 20.0, color: Colors.black, decorationColor: Colors.purple),

                      
            validator: (value){
              if(value.isEmpty){
                return "Informe a sua senha";
              }
                return null;
            },
            controller: _passwordFilter,
           
                
              ),
              Divider(height: 30,),
              ButtonTheme(
                height: 60.0,
                child: RaisedButton(
                  onPressed: () => {
                    formkey2.currentState.validate(),
                    if(_email.isNotEmpty & _password.isNotEmpty){
                        novos = Pessoa.construtor(_email,_password),
                        if(!listanovos.contains(novos)){
                           listanovos.add(novos),  
                           debugPrint("Cadastrado com sucesso"),
                        },
                        Navigator.push(context, MaterialPageRoute(builder: (context) => HomePage()))
                    }
                    else{
                      debugPrint("Informações necessárias não informadas")
                      
                    }
                   
                  },
                  shape: new RoundedRectangleBorder(borderRadius: 
new BorderRadius.circular(30.0)),
                  child: Text(
                    "Cadastrar",
                    style: TextStyle(color: Colors.orangeAccent, fontSize: 30),
                  ),
                  color:Colors.white,
                ),
              ),
            ],
         ),
        ),
      )
   ),
      ),
    );
  }
  
 
}

class Pagina3 extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(title: Text("Bem-vindo(a)!",),),
    body: Center( 
      child: Container(
        height: 500.0,
        child: Column(children: <Widget>[Divider(height: 300,),Text("Esse é uma visão de como será a plataforma do ODG"),],),
      ),
     

    )
      
    );
  }
}
